{
    "type": "object",
    "properties": {
        "resourceGroupName": {
            "required": true,
            "type": "string"
        },
        "clusterName": {
            "required": true,
            "type": "string"
        },
        "subscriptionId": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Cluster update request",
            "properties": {
                "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Describes the cluster resource properties that can be updated during PATCH operation.",
                    "properties": {
                        "addOnFeatures": {
                            "description": "The list of add-on features to enable in the cluster.",
                            "items": {
                                "description": "Available cluster add-on features",
                                "enum": [
                                    "RepairManager",
                                    "DnsService",
                                    "BackupRestoreService"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "certificate": {
                            "description": "The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.",
                            "properties": {
                                "thumbprint": {
                                    "description": "Thumbprint of the primary certificate.",
                                    "type": "string"
                                },
                                "thumbprintSecondary": {
                                    "description": "Thumbprint of the secondary certificate.",
                                    "type": "string"
                                },
                                "x509StoreName": {
                                    "description": "The local certificate store location.",
                                    "enum": [
                                        "AddressBook",
                                        "AuthRoot",
                                        "CertificateAuthority",
                                        "Disallowed",
                                        "My",
                                        "Root",
                                        "TrustedPeople",
                                        "TrustedPublisher"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "thumbprint"
                            ],
                            "type": "object"
                        },
                        "clientCertificateCommonNames": {
                            "description": "The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.",
                            "items": {
                                "description": "Describes the client certificate details using common name.",
                                "properties": {
                                    "certificateCommonName": {
                                        "description": "The common name of the client certificate.",
                                        "type": "string"
                                    },
                                    "certificateIssuerThumbprint": {
                                        "description": "The issuer thumbprint of the client certificate.",
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "certificateCommonName",
                                    "isAdmin",
                                    "certificateIssuerThumbprint"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "clientCertificateThumbprints": {
                            "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.",
                            "items": {
                                "description": "Describes the client certificate details using thumbprint.",
                                "properties": {
                                    "certificateThumbprint": {
                                        "description": "The thumbprint of the client certificate.",
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "certificateThumbprint",
                                    "isAdmin"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "clusterCodeVersion": {
                            "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
                            "type": "string"
                        },
                        "fabricSettings": {
                            "description": "The list of custom fabric settings to configure the cluster. This will overwrite the existing list.",
                            "items": {
                                "description": "Describes a section in the fabric settings of the cluster.",
                                "properties": {
                                    "name": {
                                        "description": "The section name of the fabric settings.",
                                        "type": "string"
                                    },
                                    "parameters": {
                                        "description": "The collection of parameters in the section.",
                                        "items": {
                                            "description": "Describes a parameter in fabric settings of the cluster.",
                                            "properties": {
                                                "name": {
                                                    "description": "The parameter name of fabric setting.",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The parameter value of fabric setting.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name",
                                    "parameters"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "nodeTypes": {
                            "description": "The list of node types in the cluster. This will overwrite the existing list.",
                            "items": {
                                "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
                                "properties": {
                                    "applicationPorts": {
                                        "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                                        "properties": {
                                            "endPort": {
                                                "description": "End port of a range of ports",
                                                "type": "integer"
                                            },
                                            "startPort": {
                                                "description": "Starting port of a range of ports",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "endPort",
                                            "startPort"
                                        ],
                                        "type": "object"
                                    },
                                    "capacities": {
                                        "additionalProperties": {
                                            "description": "Capacity tag value",
                                            "type": "string"
                                        },
                                        "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                                        "type": "object"
                                    },
                                    "clientConnectionEndpointPort": {
                                        "description": "The TCP cluster management endpoint port.",
                                        "type": "integer"
                                    },
                                    "durabilityLevel": {
                                        "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 30 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                                        "enum": [
                                            "Bronze",
                                            "Silver",
                                            "Gold"
                                        ],
                                        "type": "string"
                                    },
                                    "ephemeralPorts": {
                                        "description": "The range of empheral ports that nodes in this node type should be configured with.",
                                        "properties": {
                                            "endPort": {
                                                "description": "End port of a range of ports",
                                                "type": "integer"
                                            },
                                            "startPort": {
                                                "description": "Starting port of a range of ports",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "endPort",
                                            "startPort"
                                        ],
                                        "type": "object"
                                    },
                                    "httpGatewayEndpointPort": {
                                        "description": "The HTTP cluster management endpoint port.",
                                        "type": "integer"
                                    },
                                    "isPrimary": {
                                        "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.",
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "description": "The name of the node type.",
                                        "type": "string"
                                    },
                                    "placementProperties": {
                                        "additionalProperties": {
                                            "description": "Placement tag value",
                                            "type": "string"
                                        },
                                        "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                                        "type": "object"
                                    },
                                    "reverseProxyEndpointPort": {
                                        "description": "The endpoint used by reverse proxy.",
                                        "type": "integer"
                                    },
                                    "vmInstanceCount": {
                                        "description": "The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource.",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "clientConnectionEndpointPort",
                                    "httpGatewayEndpointPort",
                                    "isPrimary",
                                    "name",
                                    "vmInstanceCount"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "reliabilityLevel": {
                            "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).",
                            "enum": [
                                "Bronze",
                                "Silver",
                                "Gold"
                            ],
                            "type": "string"
                        },
                        "reverseProxyCertificate": {
                            "description": "The server certificate used by reverse proxy.",
                            "properties": {
                                "thumbprint": {
                                    "description": "Thumbprint of the primary certificate.",
                                    "type": "string"
                                },
                                "thumbprintSecondary": {
                                    "description": "Thumbprint of the secondary certificate.",
                                    "type": "string"
                                },
                                "x509StoreName": {
                                    "description": "The local certificate store location.",
                                    "enum": [
                                        "AddressBook",
                                        "AuthRoot",
                                        "CertificateAuthority",
                                        "Disallowed",
                                        "My",
                                        "Root",
                                        "TrustedPeople",
                                        "TrustedPublisher"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "thumbprint"
                            ],
                            "type": "object"
                        },
                        "upgradeDescription": {
                            "description": "The policy to use when upgrading the cluster.",
                            "properties": {
                                "deltaHealthPolicy": {
                                    "description": "The delta health policy used when upgrading the cluster.",
                                    "properties": {
                                        "maxPercentDeltaUnhealthyApplications": {
                                            "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades. The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "maxPercentDeltaUnhealthyNodes": {
                                            "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                                            "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "maxPercentDeltaUnhealthyApplications",
                                        "maxPercentDeltaUnhealthyNodes",
                                        "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                                    ],
                                    "type": "object"
                                },
                                "forceRestart": {
                                    "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                                    "type": "boolean"
                                },
                                "healthCheckRetryTimeout": {
                                    "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                },
                                "healthCheckStableDuration": {
                                    "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                },
                                "healthCheckWaitDuration": {
                                    "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                },
                                "healthPolicy": {
                                    "description": "The cluster health policy used when upgrading the cluster.",
                                    "properties": {
                                        "maxPercentUnhealthyApplications": {
                                            "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "maxPercentUnhealthyNodes": {
                                            "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "upgradeDomainTimeout": {
                                    "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                },
                                "upgradeReplicaSetCheckTimeout": {
                                    "description": "The maximum amount of time to block processing of an upgrade domain and revent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                },
                                "upgradeTimeout": {
                                    "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "healthCheckRetryTimeout",
                                "healthCheckStableDuration",
                                "healthCheckWaitDuration",
                                "healthPolicy",
                                "upgradeDomainTimeout",
                                "upgradeReplicaSetCheckTimeout",
                                "upgradeTimeout"
                            ],
                            "type": "object"
                        },
                        "upgradeMode": {
                            "description": "The upgrade mode of the cluster. This indicates if the cluster should be automatically upgraded when new Service Fabric runtime version is available.",
                            "enum": [
                                "Automatic",
                                "Manual"
                            ],
                            "type": "string"
                        }
                    }
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Cluster update parameters",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "api_version": {
            "required": true,
            "type": "string"
        }
    }
}